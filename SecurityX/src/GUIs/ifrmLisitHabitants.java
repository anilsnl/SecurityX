/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import Entities.HCar;
import Entities.Habitant;
import Entities.Log;
import Entities.Personal;
import Facade.HCars;
import Facade.Habitants;
import Facade.Logs;
import Facade.Personals;
import Settings.DBSetting;
import com.sun.xml.internal.ws.api.streaming.XMLStreamReaderFactory;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.management.RuntimeErrorException;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author anild
 */
public class ifrmLisitHabitants extends javax.swing.JInternalFrame {

    /**
     * Creates new form LisitHabitants
     */
    public ifrmLisitHabitants() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        tbtnShowHideisLeftHabitant = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        cbBlock = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstHabitants = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtHabitantID = new javax.swing.JTextField();
        txtSaveDate = new javax.swing.JTextField();
        txtHName = new javax.swing.JTextField();
        txtHSurname = new javax.swing.JTextField();
        cbisTRS = new javax.swing.JComboBox<>();
        txtTRIDNo = new javax.swing.JTextField();
        txtPersona = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtHEmail = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        cbDay = new javax.swing.JComboBox<>();
        cbMoth = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        tbtnStartToEdit = new javax.swing.JToggleButton();
        btnUpdate = new javax.swing.JButton();
        btnSetisLeft = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtApartment = new javax.swing.JTextField();
        chisHost = new javax.swing.JCheckBox();
        chisLeft = new javax.swing.JCheckBox();
        chisTRIDVerified = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHCars = new javax.swing.JTable();
        btnCarDelete = new javax.swing.JButton();
        btnCarInfo = new javax.swing.JButton();
        btnNewCar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFamily = new javax.swing.JTable();

        setClosable(true);
        setTitle("Sakinleri Görüntüle");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formİnternalFrameOpened(evt);
            }
        });

        jPanel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel1.setText("Toplam 00 içinde ara");

        txtSName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnSearch.setText("Aeama Yap");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tbtnShowHideisLeftHabitant.setText("Ayrılan Sakinleri Göster");
        tbtnShowHideisLeftHabitant.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tbtnShowHideisLeftHabitantİtemStateChanged(evt);
            }
        });
        tbtnShowHideisLeftHabitant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnShowHideisLeftHabitantActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabel2.setText("Blok Seç");

        cbBlock.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbBlock.setMaximumRowCount(10);
        cbBlock.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Tümü-" }));
        cbBlock.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBlockİtemStateChanged(evt);
            }
        });

        lstHabitants.setBackground(new java.awt.Color(102, 0, 102));
        lstHabitants.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lstHabitants.setForeground(new java.awt.Color(102, 255, 255));
        lstHabitants.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstHabitants.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstHabitantsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstHabitants);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSName, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tbtnShowHideisLeftHabitant, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(txtSName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbBlock, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tbtnShowHideisLeftHabitant, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Sakin Bilgileri"));
        jPanel2.setForeground(new java.awt.Color(51, 255, 255));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Temel Bilgiler"));

        jLabel3.setText("Sakin ID - Sisteme Kayıt Tarifi:");

        jLabel4.setText("Sakin Adı ve Soyadı:");

        jLabel5.setText("Uyruk - TC Kimlik No:");

        jLabel6.setText("Doğum Tarihi - Kayıt Yapan Personel");

        txtHabitantID.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtHabitantID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHabitantIDKeyTyped(evt);
            }
        });

        txtSaveDate.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtSaveDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSaveDateKeyTyped(evt);
            }
        });

        txtHName.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        txtHSurname.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        cbisTRS.setFont(new java.awt.Font("Trajan Pro", 0, 12)); // NOI18N
        cbisTRS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yabancı", "TC Vatandaşı" }));

        txtTRIDNo.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        txtPersona.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        txtYear.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        jLabel7.setText("E Posta Adresi - Cep Telefonu:");

        txtHEmail.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        txtPhoneNumber.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        cbDay.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cbDay.setMaximumRowCount(20);
        cbDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-gün-", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cbMoth.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cbMoth.setMaximumRowCount(13);
        cbMoth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-ay-", "Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmez", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık" }));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUIs/icons/frmMainMenu_Logo.png"))); // NOI18N

        tbtnStartToEdit.setText("Düzenlemeye Başla");
        tbtnStartToEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnStartToEditActionPerformed(evt);
            }
        });

        btnUpdate.setText("Bilgileri Güncelle");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSetisLeft.setText("Sakini Ayrıldı Olarak İşaretle");
        btnSetisLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetisLeftActionPerformed(evt);
            }
        });

        btnReset.setText("Sıfırla");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel10.setText("Daire:");

        txtApartment.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        chisHost.setText("Ev Sahibi");

        chisLeft.setText("Ayrıldı");

        chisTRIDVerified.setText("Kimlik Doğrulandı");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(tbtnStartToEdit)
                        .addGap(165, 165, 165)
                        .addComponent(btnReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSetisLeft, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel10))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(cbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbMoth, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPersona))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtHabitantID, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSaveDate))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(cbisTRS, 0, 152, Short.MAX_VALUE)
                                        .addComponent(txtHEmail, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(txtApartment, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(chisHost)
                                        .addGap(18, 18, 18)
                                        .addComponent(chisLeft)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(chisTRIDVerified)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtPhoneNumber)
                                    .addComponent(txtTRIDNo)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(txtHName)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3))
                            .addComponent(txtSaveDate, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(txtHabitantID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(txtHSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbisTRS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtTRIDNo)))
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbMoth, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPersona, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtYear)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(cbDay)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtHEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPhoneNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtApartment, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chisHost)
                        .addComponent(chisLeft)
                        .addComponent(chisTRIDVerified)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tbtnStartToEdit)
                    .addComponent(btnUpdate)
                    .addComponent(btnSetisLeft)
                    .addComponent(btnReset))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Sakin Adına Kayıtlı Araçlar"));

        tblHCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblHCars);

        btnCarDelete.setText("Sil");
        btnCarDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarDeleteActionPerformed(evt);
            }
        });

        btnCarInfo.setText("Detay");
        btnCarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarInfoActionPerformed(evt);
            }
        });

        btnNewCar.setText("Yeni Araç");
        btnNewCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCarDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCarInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNewCar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnCarDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCarInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnNewCar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Sakin ile ayı dairede ikamet eden sakinler"));

        tblFamily.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblFamily);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formİnternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formİnternalFrameOpened
        // TODO add your handling code here:
        jPanel3.setVisible(false);
        jPanel4.setVisible(false);
        jPanel4.setVisible(false);
        jPanel2.setVisible(false);
        try {
            Connection con = DBSetting.openTocan();
            PreparedStatement psList = con.prepareStatement("select cast(HabitantID as nvarchar(10)) +' '+ Name +' '+Surname from Habitants where isLeft=0");
            ResultSet rsList = psList.executeQuery();
            DefaultListModel baseList = new DefaultListModel();
            while (rsList.next()) {                
                baseList.addElement(rsList.getString(1));
            }
            lstHabitants.setModel(baseList);
            
            //dairelereleri listele
            PreparedStatement psApp = con.prepareStatement("select ApartmentID,COUNT(*) from Habitants group by ApartmentID");
            ResultSet RSaPP = psApp.executeQuery();
            DefaultListModel LSTApp = new DefaultListModel();
            while (RSaPP.next()) {                
                cbBlock.addItem(RSaPP.getString(1));
            }
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Veriler alınırken bir hata oluştu!\n"+e.getMessage(),"SecurityX",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_formİnternalFrameOpened

    private void tbtnShowHideisLeftHabitantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnShowHideisLeftHabitantActionPerformed

        // TODO add your handling code here:
       
    }//GEN-LAST:event_tbtnShowHideisLeftHabitantActionPerformed

    private void tbtnShowHideisLeftHabitantİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tbtnShowHideisLeftHabitantİtemStateChanged
        // TODO add your handling code here:
         try {
            String sqlQ;
            if (tbtnShowHideisLeftHabitant.isSelected()) {
                sqlQ="select cast(HabitantID as nvarchar(10)) +' '+ Name +' '+Surname from Habitants where isLeft=1";
            } else {
                sqlQ="select cast(HabitantID as nvarchar(10)) +' '+ Name +' '+Surname from Habitants where isLeft=0";
            }
            Connection con = DBSetting.openTocan();
            PreparedStatement psList = con.prepareStatement(sqlQ);
            ResultSet rsList = psList.executeQuery();
            DefaultListModel baseList = new DefaultListModel();
            while (rsList.next()) {                
                baseList.addElement(rsList.getString(1));
            }
            
            lstHabitants.setModel(baseList);
            
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Veriler alınırken bir hata oluştu!\n"+e.getMessage(),"SecurityX",JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_tbtnShowHideisLeftHabitantİtemStateChanged
    void showListByTheResulfOfApp()
    {
        try {
            String SQLBase="select cast(HabitantID as nvarchar(10)) +' '+ Name +' '+Surname from Habitants where isLeft=";
            if(tbtnShowHideisLeftHabitant.isSelected())
            {
                SQLBase+="1";
            }
            else
            {
                SQLBase+="0";
            }
            if (cbBlock.getSelectedIndex()==0 || cbBlock.getSelectedIndex()==-1) {
                
            } else {
                SQLBase+=" and ApartmentID='"+cbBlock.getSelectedItem().toString()+"'";
            }
            Connection CON = DBSetting.openTocan();
            PreparedStatement PS = CON.prepareStatement(SQLBase);
            ResultSet RS = PS.executeQuery();
            DefaultListModel df = new DefaultListModel();
            while (RS.next()) {                
                df.addElement(RS.getString(1));
            }
            lstHabitants.setModel(df);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Listeleme hatası!\n"+e.getMessage(),"SecurityX",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void cbBlockİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBlockİtemStateChanged
        // TODO add your handling code here:
        showListByTheResulfOfApp();
        
    }//GEN-LAST:event_cbBlockİtemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        searchForName();
    }//GEN-LAST:event_btnSearchActionPerformed
    Habitant curentHabiitant = new Habitant();
    private void lstHabitantsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstHabitantsValueChanged
        // TODO add your handling code here:
        jPanel3.setVisible(true);
        jPanel4.setVisible(true);
        jPanel5.setVisible(true);
        jPanel2.setVisible(true);
        try {
            String value[] = lstHabitants.getSelectedValue().split(" ");
            txtHabitantID.setText(value[0]);
            curentHabiitant = Habitants.getHabitantByID(Integer.parseInt(value[0]));
            getCurentHabitantInfo();
            
            //TABLOLARI DOLDUR
            Connection con = DBSetting.openTocan();
            PreparedStatement psCC = con.prepareStatement("select CarID as AraçID, Plate as Plaka, CarDetail as Detay from HCars"+
                    " where HabitantID=?");
            psCC.setInt(1, curentHabiitant.getHabitantID());
            ResultSet RShC = psCC.executeQuery();
            tblHCars.setModel(DbUtils.resultSetToTableModel(RShC));
            

            PreparedStatement pshAB = con.prepareStatement("select HabitantID AS SakinID, Name+' '+Surname as SakinAdı,SaveDate as KayıtTarihi"+
                    " from Habitants where ApartmentID=?");
            pshAB.setString(1, txtApartment.getText());
            ResultSet RSHAB = pshAB.executeQuery();
            tblFamily.setModel(DbUtils.resultSetToTableModel(RSHAB));
            tbtnStartToEdit.setSelected(false);
            tbtnStartToEditActionPerformed(null);
        } catch (RuntimeException | SQLException e) {
           // JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_lstHabitantsValueChanged

    private void btnNewCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCarActionPerformed
        // TODO add your handling code here:
        try {
            String plate = JOptionPane.showInputDialog(null, txtHName.getText()+" "+txtHSurname.getText()+" için eklenec aracın plakasını girin!","Araç Ekle",JOptionPane.QUESTION_MESSAGE);
            if (plate.trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Plaka boş bırakılamaz!","SecurityX",JOptionPane.ERROR_MESSAGE);
                return;
            }
            String detail = JOptionPane.showInputDialog(null, txtHName.getText()+" "+txtHSurname.getText()+" için eklenec aracın açıklamasını girin!","Araç Ekle",JOptionPane.QUESTION_MESSAGE);
            if (detail.trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Açıklama alanı boş kalamaz. Lütfen tekrar denetyin","SecurityX",JOptionPane.ERROR_MESSAGE);
                return;
            }
            plate=plate.trim().toUpperCase();
            int value = JOptionPane.showConfirmDialog(null, "Sn."+txtHSurname.getText()+" için aşağıdaki bilgilerle araç kaydı yapılacak onayliyor musunuz?\n-"+plate+"\n-"+detail,"SecurityX",JOptionPane.YES_NO_OPTION);
            if (value==JOptionPane.YES_OPTION) {
                HCar HC = new HCar();
                HC.setPlate(plate);
                HC.setHabitantID(curentHabiitant.getHabitantID());
                HC.setDetail(detail);
                HC.setPersonalID(frmLogin.activeUser.getPersonalID());
                if (HCars.addToHCars(HC)) {
                {
                    JOptionPane.showMessageDialog(null, "Araç kaydı başarıyla tamamlandı!","SecurityX",JOptionPane.INFORMATION_MESSAGE);
                    lstHabitantsValueChanged(null);
                }
                } else {
                    JOptionPane.showMessageDialog(null, "Araç ekleme sırasında bir hata oluştu!","SecurityX",JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (HeadlessException e) {
        }
    }//GEN-LAST:event_btnNewCarActionPerformed

    private void tbtnStartToEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtnStartToEditActionPerformed
        // TODO add your handling code here:
        Boolean truee;
        truee = tbtnStartToEdit.isSelected();
            txtApartment.setEnabled(truee);
            txtHEmail.setEnabled(truee);
            txtHName.setEnabled(truee);
            txtHSurname.setEnabled(truee);
            txtHabitantID.setEnabled(truee);
            txtPersona.setEnabled(truee);
            txtPhoneNumber.setEnabled(truee);
            txtSaveDate.setEnabled(truee);
            txtTRIDNo.setEnabled(truee);
            txtYear.setEnabled(truee);
            cbDay.setEnabled(truee);
            cbisTRS.setEnabled(truee);
            cbMoth.setEnabled(truee);
            chisHost.setEnabled(truee);
            chisLeft.setEnabled(truee);
            chisTRIDVerified.setEnabled(truee);
            btnReset.setEnabled(truee);
            btnSetisLeft.setEnabled(truee);
            btnUpdate.setEnabled(truee);
    }//GEN-LAST:event_tbtnStartToEditActionPerformed

    private void btnSetisLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetisLeftActionPerformed
        // TODO add your handling code here:
        String value = JOptionPane.showInputDialog(null,"Sakini ayrıldı olarak işaretlemek üzersenisiz!\nİşilemi onaylamak için soaadınızı girin.","SecurityX - İşlem Onaty",JOptionPane.QUESTION_MESSAGE);
        if (value.toUpperCase().equals(frmLogin.activeUser.getSurname())) {
            if (curentHabiitant.getIsLeft()) {
                JOptionPane.showMessageDialog(null, "Bu sakin zaten ayrıldı olarak kaydedildi!","SecurityX",JOptionPane.WARNING_MESSAGE);
                return;
            }
            Habitants.setAsisLeseft(curentHabiitant);
            JOptionPane.showMessageDialog(null, "İşlemeniz tamalandı!","SecurityX",JOptionPane.INFORMATION_MESSAGE);
            tbtnShowHideisLeftHabitantİtemStateChanged(null);
            lstHabitantsValueChanged(null);
        } else {
            JOptionPane.showMessageDialog(null, "Girdiğinişz bilgi geçersiz!","SecurityX",JOptionPane.ERROR_MESSAGE);
            lstHabitantsValueChanged(null);
        }
    }//GEN-LAST:event_btnSetisLeftActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        lstHabitantsValueChanged(null);
        JOptionPane.showMessageDialog(null, "Değerler varsayılan olarak sıfırlandı!","SecurityX",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarInfoActionPerformed
        // TODO add your handling code here:
        try {
            String valuye = String.valueOf(tblHCars.getValueAt(tblHCars.getSelectedRow(), 0));
            HCar h = HCars.getHCarByID(Integer.parseInt(valuye));
            Personal p = Personals.getPersonalByID(h.getPersonalID());
            JOptionPane.showMessageDialog(null, "-Plaka: "+h.getPlate()+"\n-Açıklama: "+h.getDetail()+"\n-Sisteme kayıt tarihi:"+h.getSavaDate().toLocalDateTime().toString()+
                    "\n-Kayıt yapan personel: "+p.getName()+" "+p.getSurname(),"SecurityX - Araç Detay",JOptionPane.PLAIN_MESSAGE);
        } catch (HeadlessException | NumberFormatException e) {
        }
    }//GEN-LAST:event_btnCarInfoActionPerformed

    private void btnCarDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarDeleteActionPerformed
        // TODO add your handling code here:
         try {
             String v = JOptionPane.showInputDialog(null, "Araç silme işlemini onaylamak için soyadınızı girin!","SecurityX - İşlem Onay",JOptionPane.QUESTION_MESSAGE);
             if (!v.toUpperCase().equals(frmLogin.activeUser.getSurname())) {
                 JOptionPane.showMessageDialog(null, "Geçersiz değer girdiniz!","SecurityX",JOptionPane.ERROR_MESSAGE);
                 return;
             }
            String valuye = String.valueOf(tblHCars.getValueAt(tblHCars.getSelectedRow(), 0));
            HCar h = HCars.getHCarByID(Integer.parseInt(valuye));
            Log l = new Log();
            l.setPersonalID(frmLogin.activeUser.getPersonalID());
            l.setOperation("DELHC");
            l.setDetail("Habitant car has been deleted : "+h.getPlate());
            HCars.deleteHCar(h);
            Logs.addToLog(l);
            JOptionPane.showMessageDialog(null, "Kayıt başarıyla silindi!");
             lstHabitantsValueChanged(null);
        } catch (NumberFormatException e) {
        }
    }//GEN-LAST:event_btnCarDeleteActionPerformed

    private void txtHabitantIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHabitantIDKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_txtHabitantIDKeyTyped

    private void txtSaveDateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSaveDateKeyTyped
        // TODO add your handling code here:
        evt.consume();
    }//GEN-LAST:event_txtSaveDateKeyTyped

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        try {
            
                JPasswordField pw = new JPasswordField(25);
                JOptionPane.showMessageDialog(null, "Bilgi güncelleme işlemi için bir sonraki adımda portal şifrenizi girmediz talep edilecektir...","SecurityX - Ek onay gerekli",JOptionPane.INFORMATION_MESSAGE);
                int value = JOptionPane.showConfirmDialog(null,pw,"Onaylamak için lütfen portal şifr",JOptionPane.OK_CANCEL_OPTION);
                if (value==JOptionPane.OK_OPTION) {
                if (frmLogin.activeUser.getPortalPass().equals(pw.getText())) {
                String BD = txtYear.getText()+"-"+cbMoth.getSelectedIndex()+"-"+cbDay.getSelectedIndex();
                Date bd = Date.valueOf(BD);
                Habitant h = curentHabiitant;
                h.setName(txtHName.getText().toUpperCase());
                h.setSurname(txtHSurname.getText().toUpperCase());
                h.setBirthDate(bd);
                h.setIsTRS(cbisTRS.getSelectedIndex()==1);
                h.setEMail(txtHEmail.getText());
                h.setApartmentID(txtApartment.getText().toUpperCase());
                h.setTRIDNo(Long.parseLong(txtTRIDNo.getText().trim()));
                h.setPhoneNumber(Long.parseLong(txtPhoneNumber.getText()));
                h.setIsHost(chisHost.isSelected());
                h.setIsTRIDVerified(chisTRIDVerified.isSelected());
                
                
                Log l = new Log();
                l.setOperation("UPDH");
                l.setDetail("Sakin bilgileri guncellendi");
                l.setPersonalID(frmLogin.activeUser.getPersonalID());
                
                if(Habitants.updateToHabitant(h)&&Logs.addToLog(l))
                {
                    lstHabitantsValueChanged(null);
                    tbtnShowHideisLeftHabitantİtemStateChanged(null);
                    JOptionPane.showMessageDialog(null, "Bilgi güncelleme işleminiz başarıyla tamamlandı!","SecyrityX",JOptionPane.INFORMATION_MESSAGE);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Veri güncelleme işlemi başarısız oldu!","SecurityX",JOptionPane.ERROR_MESSAGE);
                }
                
                } else {
                    lstHabitantsValueChanged(null);
                    JOptionPane.showMessageDialog(null, "Hatalı giriş yaptığınız için işleminiz iptal edilmiştir!","SecurityX",JOptionPane.WARNING_MESSAGE);
                }
        }
            
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    void searchForName()
    {
        try {
            String SQLQ;
            if (txtSName.getText().trim().equals("")) {
                tbtnShowHideisLeftHabitantİtemStateChanged(null);
                return;
            } else {
                SQLQ="select cast(HabitantID as nvarchar(10)) +' '+ Name +' '+Surname as ROWEx from Habitants where Name like'%"+
                        txtSName.getText().toUpperCase()+"%' or Surname like '%"+txtSName.getText().toUpperCase()+"%'";
            }
            Connection con = DBSetting.openTocan();
            PreparedStatement ps1;
            ps1 = con.prepareStatement(SQLQ);
            ResultSet rs = ps1.executeQuery();
            DefaultListModel ls = new DefaultListModel();
            while (rs.next()) {                
                ls.addElement(rs.getString(1));
            }
            lstHabitants.setModel(ls);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Arama sırasında bir hata oluştu!\n"+e.getMessage(),"SecurityX",JOptionPane.ERROR_MESSAGE);
        }
         catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Arama sırasında bir hata oluştu!\n"+e.getMessage(),"SecurityX",JOptionPane.ERROR_MESSAGE);
        }
    }
    void getCurentHabitantInfo()
    {
        try {
            txtApartment.setText(curentHabiitant.getApartmentID());
            txtHEmail.setText(curentHabiitant.getEMail());
            txtHName.setText(curentHabiitant.getName());
            txtHSurname.setText(curentHabiitant.getSurname());
            txtPhoneNumber.setText(String.valueOf(curentHabiitant.getPhoneNumber()));
            txtSaveDate.setText(String.valueOf(curentHabiitant.getSaveDate()));
            txtTRIDNo.setText(String.valueOf(curentHabiitant.getTRIDNo()));
            cbisTRS.setSelectedIndex(DBSetting.getBoolAsInt(curentHabiitant.getIsTRS()));
            //doğum tarihi
            Date bDate = curentHabiitant.getBirthDate();
            txtYear.setText(String.valueOf(bDate.getYear()+1900));
            //DENEME
          //  JOptionPane.showMessageDialog(null, String.valueOf(bDate.getMonth())+"  "+String.valueOf(bDate.getDate())+ " "+String.valueOf(bDate.getDay()));
            cbDay.setSelectedIndex(bDate.getDay());
            cbMoth.setSelectedIndex(bDate.getMonth());
            //Evsahibi - ayrıldı durumları
            chisHost.setSelected(curentHabiitant.getIsHost());
            chisLeft.setSelected(curentHabiitant.getIsLeft());
            chisTRIDVerified.setEnabled(curentHabiitant.getIsTRIDVerified());
            //kayıt yapan personel
            Personal p = Personals.getPersonalByID(curentHabiitant.getPersonalID());
            txtPersona.setText(p.getName()+" "+p.getSurname());
                
        } catch (RuntimeException e) {
            //JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarDelete;
    private javax.swing.JButton btnCarInfo;
    private javax.swing.JButton btnNewCar;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSetisLeft;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbBlock;
    private javax.swing.JComboBox<String> cbDay;
    private javax.swing.JComboBox<String> cbMoth;
    private javax.swing.JComboBox<String> cbisTRS;
    private javax.swing.JCheckBox chisHost;
    private javax.swing.JCheckBox chisLeft;
    private javax.swing.JCheckBox chisTRIDVerified;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> lstHabitants;
    private javax.swing.JTable tblFamily;
    private javax.swing.JTable tblHCars;
    private javax.swing.JToggleButton tbtnShowHideisLeftHabitant;
    private javax.swing.JToggleButton tbtnStartToEdit;
    private javax.swing.JTextField txtApartment;
    private javax.swing.JTextField txtHEmail;
    private javax.swing.JTextField txtHName;
    private javax.swing.JTextField txtHSurname;
    private javax.swing.JTextField txtHabitantID;
    private javax.swing.JTextField txtPersona;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtSName;
    private javax.swing.JTextField txtSaveDate;
    private javax.swing.JTextField txtTRIDNo;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
